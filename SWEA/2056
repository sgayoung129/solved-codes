### [2056] 연월일 달력 (https://swexpertacademy.com/main/code/problem/problemDetail.do)

<접근법>
날짜를 입력 받고 YYYY/MM/DD 형식으로 변경 - 문자열보단 몫과 나머지로 정리하는 것이 간편
년, 월, 달 형식 맞추기(4글자, 2글자, 2글자)
각 달 조건문 정리(1≤MM≤12)
각 일 조건문 정리(1≤DD≤28/30/31)
반복문으로 테스트 케이스 정 

<코드>
(https://swexpertacademy.com/main/solvingProblem/solvingProblem.do)

#include <stdio.h>

int main(void)
{
	int T;
	int num;
	int y, m, d;
	
	scanf("%d", &T);
	
	for(int i=1; i<=T; i++)
	{
		scanf("%d", &num);
		
		y= num/10000;
		m= (num/100)%100;
		d= num%100;
		
		printf("#%d ", i);

		if(m<1 || m>12)
		{
		printf("-1\n");
		continue;
		}
		if(m==2)
		{
			if(d<1 || d>28)
	        {
	        printf("-1\n");
	    		continue;
	        }
		}
		if(m==4 || m==6 || m==9 || m==11)
		{
			if(d<1 || d>30)
	        {
	        printf("-1\n");
	    		continue;
	        }
		}
		else
		{
			if(d<1 || d>31)
	        {
	        printf("-1\n");
	    		continue;
	        }
		}
		printf("%04d/%02d/%02d\n", y,m,d);
	}
	return 0;
}

<피드백>
y = num / 10000;, m = (num / 100) % 100;와 같이 몫과 나머지 연산만으로 연, 월, 일을 분리한 것은 문자열 변환보다 빠르고 간편함.
그러나 현재 코드는 if, else if, else를 사용하여 각 달의 일수를 조건문으로 나누고 있으며 이러한 방식은 코드가 길고 실수할 여지가 존재함.
해당 문제는 윤년을 고려하지 않으므로 각 달의 최대 일수를 배열에 저장하여 검증 로직을 단순화하는 것이 간단할 수 있음.
